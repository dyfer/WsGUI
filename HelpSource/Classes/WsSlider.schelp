TITLE:: WsSlider
summary:: A slider for WsGUI
categories:: GUI>WsGUI, Extensions
related:: Classes/WsWindow, Classes/WsLayout, Classes/WsButton, Classes/WsCheckbox, Classes/WsImage, Classes/WsInput, Classes/WsPopUpMenu, Classes/WsSimpleButton, Classes/WsSlider, Classes/WsStaticText

DESCRIPTION::
A slider for WsGUI.


CLASSMETHODS::

METHOD:: new
Create new instance and add it to the window immediately.

METHOD:: init
Create new instance without adding it to the window. Use this when using WsLayout.

ARGUMENT:: wsWindow
An instance of code::WsWindow::

ARGUMENT:: bounds
A code::Rect:: specifying the size of the widget.
note::Currently a relative measurement is used: 1 for full window width, 1 for full window height, e.g. code::Rect(0, 0, 1, 1):: would occupy whole window.::

returns:: an instance of the widget


INSTANCEMETHODS::

METHOD:: action
Gets or sets function to be evaluated when the slider is pressed/moved.
ARGUMENT:: function
Any object to set as default action, usually a Function. It is passed the current instance.

METHOD:: value
Sets the current state. strong::Does not:: trigger the action.
ARGUMENT:: val
A float setting the state number.

METHOD:: valueAction
Sets the current state and triggers the action.
ARGUMENT:: val
A float setting the state number.

METHOD:: background
ARGUMENT:: color
Background color of the widget. Should be an instance of a code::Color::.
returns:: current color


EXAMPLES::

code::
a = WsWindow.new("new title", true, 8000);//start the window
"http://localhost:8000".openOS; //open in a browser

//slider
//without controlSpec
k = WsSlider.new(a, Rect(0.1, 0.1, 0.1, 0.4));
k.value_(0);
k.value_(0.7);
k.value;
k.action_({|sl| postf("slider value: %\n", sl.value)})
k.valueAction_(0.3);
k.remove;

k = WsSlider.init(a, Rect(0.5, 0.3, 0.1, 0.4));
k.addToPage;

//WsEZSlider will eventually embed label, slider, number box and control spec; currently it only allows adding control spec to the slider
e = WsEZSlider.new(a, Rect(0.1, 0.3, 0.5, 0.1)); //horizontal
e = WsEZSlider.new(a, Rect(0.1, 0.3, 0.1, 0.5)); //vertical - still has some issues
//EZSlider with control spec;
e.controlSpec_(\freq.asSpec) //only in EZSlider;
e.bounds // getter
e.bounds(Rect(0,0,100,100))
e.value_(0.5)
e.background_(Color.green)
e.value
e.action_({|sl| postf("slider value: %\n", sl.value)}) //now the actual object is passed
e.valueAction_(2000);
e.value
e.remove

e = WsEZSlider.init(a, Rect(0.1, 0.3, 0.1, 0.4)); //no styling currently available
e.addToPage
e.remove

a.free; //free the window
::